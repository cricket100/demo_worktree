
[1,2,-2147483648]
   public int method(int[] nums) {
        if(nums.length == 1) return nums[0];
        if(nums.length == 2) return Math.max(nums[0], nums[1]);

        int max1 = Integer.MIN_VALUE;
        int max2 = max1;
        int max3 = max2;

        for(int i=0; i<nums.length; i++) {
            if(nums[i] > max1) {
                max3 = max2;
                max2 = max1;
                max1 = nums[i];
            } else if(nums[i] > max2 && nums[i] != max1) {
                max3 = max2;
                max2 = nums[i];
            } else if(nums[i] > max3 && nums[i] != max1 && nums[i] != max2) {
                max3 = nums[i];
            }
        }

        int result = max3 == Integer.MIN_VALUE ? max1 : max3;
        return result;
    }


1.
private static void test() {
		HashMap<String, String> cache = new HashMap<>();
		cache.put("a", "a");
		cache.put("b", "b");

		for(Iterator<String> it = cache.keySet().iterator(); it.hasNext();) {
			String key = it.next();
			cache.remove(key);
		}
	}